// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/luckyAkbar/atec-api/internal/model (interfaces: SDTestUsecase)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/luckyAkbar/atec-api/internal/common"
	model "github.com/luckyAkbar/atec-api/internal/model"
)

// MockSDTestUsecase is a mock of SDTestUsecase interface.
type MockSDTestUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSDTestUsecaseMockRecorder
}

// MockSDTestUsecaseMockRecorder is the mock recorder for MockSDTestUsecase.
type MockSDTestUsecaseMockRecorder struct {
	mock *MockSDTestUsecase
}

// NewMockSDTestUsecase creates a new mock instance.
func NewMockSDTestUsecase(ctrl *gomock.Controller) *MockSDTestUsecase {
	mock := &MockSDTestUsecase{ctrl: ctrl}
	mock.recorder = &MockSDTestUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSDTestUsecase) EXPECT() *MockSDTestUsecaseMockRecorder {
	return m.recorder
}

// Initiate mocks base method.
func (m *MockSDTestUsecase) Initiate(arg0 context.Context, arg1 *model.InitiateSDTestInput) (*model.InitiateSDTestOutput, *common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initiate", arg0, arg1)
	ret0, _ := ret[0].(*model.InitiateSDTestOutput)
	ret1, _ := ret[1].(*common.Error)
	return ret0, ret1
}

// Initiate indicates an expected call of Initiate.
func (mr *MockSDTestUsecaseMockRecorder) Initiate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initiate", reflect.TypeOf((*MockSDTestUsecase)(nil).Initiate), arg0, arg1)
}

// Submit mocks base method.
func (m *MockSDTestUsecase) Submit(arg0 context.Context, arg1 *model.SubmitSDTestInput) (*model.SubmitSDTestOutput, *common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Submit", arg0, arg1)
	ret0, _ := ret[0].(*model.SubmitSDTestOutput)
	ret1, _ := ret[1].(*common.Error)
	return ret0, ret1
}

// Submit indicates an expected call of Submit.
func (mr *MockSDTestUsecaseMockRecorder) Submit(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Submit", reflect.TypeOf((*MockSDTestUsecase)(nil).Submit), arg0, arg1)
}
