// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/luckyAkbar/atec-api/internal/model (interfaces: SDTestRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/luckyAkbar/atec-api/internal/model"
	gorm "gorm.io/gorm"
)

// MockSDTestRepository is a mock of SDTestRepository interface.
type MockSDTestRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSDTestRepositoryMockRecorder
}

// MockSDTestRepositoryMockRecorder is the mock recorder for MockSDTestRepository.
type MockSDTestRepositoryMockRecorder struct {
	mock *MockSDTestRepository
}

// NewMockSDTestRepository creates a new mock instance.
func NewMockSDTestRepository(ctrl *gomock.Controller) *MockSDTestRepository {
	mock := &MockSDTestRepository{ctrl: ctrl}
	mock.recorder = &MockSDTestRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSDTestRepository) EXPECT() *MockSDTestRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSDTestRepository) Create(arg0 context.Context, arg1 *model.SDTest, arg2 *gorm.DB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSDTestRepositoryMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSDTestRepository)(nil).Create), arg0, arg1, arg2)
}
